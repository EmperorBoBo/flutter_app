import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';class DialogShow extends StatefulWidget {  @override  State<StatefulWidget> createState() => _DialogStateShow();}class _DialogStateShow extends State<DialogShow> {  @override  Widget build(BuildContext context) {    var title = Container(      alignment: AlignmentDirectional.center,      child: Text(        "Dialog Unit",        style: TextStyle(fontSize: 30),      ),    );    Map<String, Function> buttons = {      "对话框SimpleDialog": _showSimpleDialog,      "对话框AlertDialog": _showAlertDialog,      "对话框CupertionAlertDialog": _showCupertionAlertDialog,      "对话框显示自己": _showWidgetDialog,      "Scaffold": _showScaffold,      "BottomSheet": _showBottomSheet,      "DatePicker": _showDatePicker,      "TimePicker": _showTimePicker,      "CupertionPicker": _showCupertionPicker,      "CupertionDatePicker": _showCupertionDatePicker,      "CupertionTimePicker": _showCupertionTimePicker,    };    var btns = buttons.keys.toList().map((str) {      return RaisedButton(        onPressed: () {          buttons[str](context);        },        child: Text(str),      );    }).toList();    var result = Column(      children: <Widget>[title, Column(children: btns)],    );    return result;  }  ///  简单对话框  _showSimpleDialog(BuildContext context) {    var strs = ['第一 绝对不可意气用事', '第二 绝对不可怒发冲冠', '第三 绝对不可放弃比赛', '第四 蜻蜓队长前来觐见'];    var title = Row(      children: <Widget>[        Image.asset(          "images/icon_nav_1.png",          width: 30,          height: 30,        ),        SizedBox(width: 10),        new Text("蜻蜓队长")      ],    );    showDialog(        context: context,        builder: (context) {          return SimpleDialog(            title: title,            children: strs.map((str) {              return SimpleDialogOption(                child: Row(                  children: <Widget>[                    Icon(                      Icons.turned_in_not,                      color: Colors.blueAccent,                    ),                    Text(str)                  ],                ),                onPressed: () {                  Navigator.of(context).pop(str);                  print(str);                },              );            }).toList(),          );        });  }  /// 展示alertDialog  _showAlertDialog(BuildContext context) {}  /// 展示CupertionAlertDialog  _showCupertionAlertDialog(BuildContext context) {}  _showWidgetDialog(BuildContext context) {}  _showScaffold(BuildContext context) {}  _showBottomSheet(BuildContext context) {}  _showDatePicker(BuildContext context) {}  _showTimePicker(BuildContext context) {}  _showCupertionPicker(BuildContext context) {}  _showCupertionDatePicker(BuildContext context) {}  _showCupertionTimePicker(BuildContext context) {}}